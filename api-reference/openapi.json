{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["App"]
      }
    },
    "/clients": {
      "get": {
        "operationId": "ClientController_index",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "default": 1, "type": "number" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": { "default": 10, "type": "number" }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": { "default": "created_at", "type": "string" }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "desc",
              "enum": ["asc", "desc"],
              "type": "string"
            }
          },
          {
            "name": "columns",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Clients retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedClientSwaggerModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Invalid API key.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedResponseSwaggerModel"
                }
              }
            }
          }
        },
        "security": [{ "x-api-key": [] }],
        "summary": "Get all clients",
        "tags": ["Client"]
      },
      "post": {
        "operationId": "ClientController_createClient",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateClientDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientSwaggerModel" }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Invalid API key.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedResponseSwaggerModel"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseSwaggerModel"
                }
              }
            }
          }
        },
        "security": [{ "x-api-key": [] }],
        "summary": "Create new client",
        "tags": ["Client"]
      }
    },
    "/clients/{id}": {
      "get": {
        "operationId": "ClientController_show",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Client found successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientSwaggerModel" }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Invalid API key.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedResponseSwaggerModel"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseSwaggerModel"
                }
              }
            }
          }
        },
        "security": [{ "x-api-key": [] }],
        "summary": "Create new client",
        "tags": ["Client"]
      },
      "patch": {
        "operationId": "ClientController_updateClient",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateClientDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientSwaggerModel" }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Invalid API key.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedResponseSwaggerModel"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseSwaggerModel"
                }
              }
            }
          }
        },
        "security": [{ "x-api-key": [] }],
        "summary": "Update client",
        "tags": ["Client"]
      },
      "delete": {
        "operationId": "ClientController_deleteClient",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Client deleted successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientSwaggerModel" }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Invalid API key.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedResponseSwaggerModel"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseSwaggerModel"
                }
              }
            }
          }
        },
        "security": [{ "x-api-key": [] }],
        "summary": "Delete client",
        "tags": ["Client"]
      }
    }
  },
  "info": {
    "title": "Identety API",
    "description": "Identity Provider API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "x-api-key": { "type": "apiKey", "in": "header", "name": "x-api-key" }
    },
    "schemas": {
      "ClientSwaggerModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "uuid-123" },
          "clientId": { "type": "string", "example": "client_abc123" },
          "clientSecret": { "type": "string", "example": "secret_xyz789" },
          "name": { "type": "string", "example": "My Client" },
          "type": { "type": "string", "enum": ["public", "private", "m2m"] },
          "redirectUris": {
            "example": ["https://example.com/callback"],
            "type": "array",
            "items": { "type": "string" }
          },
          "allowedScopes": {
            "example": ["openid", "profile"],
            "type": "array",
            "items": { "type": "string" }
          },
          "allowedGrants": {
            "example": ["authorization_code"],
            "type": "array",
            "items": { "type": "string" }
          },
          "isActive": { "type": "boolean", "example": true },
          "settings": {
            "type": "object",
            "example": {
              "tokenEndpointAuthMethod": "client_secret_basic",
              "accessTokenTTL": 3600
            }
          }
        },
        "required": [
          "id",
          "clientId",
          "clientSecret",
          "name",
          "type",
          "redirectUris",
          "allowedScopes",
          "allowedGrants",
          "isActive",
          "settings"
        ]
      },
      "PaginatedClientSwaggerModel": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClientSwaggerModel" }
          },
          "meta": {
            "type": "object",
            "example": {
              "totalCount": 1,
              "currentPage": 1,
              "hasNextPage": false,
              "totalPages": 1
            }
          }
        },
        "required": ["nodes", "meta"]
      },
      "UnAuthorizedResponseSwaggerModel": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "Invalid API key" },
          "statusCode": { "type": "number", "example": 401 },
          "error": { "type": "string", "example": "Unauthorized" }
        },
        "required": ["message", "statusCode", "error"]
      },
      "NotFoundResponseSwaggerModel": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "Client not found" },
          "statusCode": { "type": "number", "example": 401 },
          "error": { "type": "string", "example": "Unauthorized" }
        },
        "required": ["message", "statusCode", "error"]
      },
      "ClientSettings": { "type": "object", "properties": {} },
      "CreateClientDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Client Name" },
          "type": {
            "type": "string",
            "enum": ["public", "private", "m2m"],
            "description": "Client type"
          },
          "redirectUris": {
            "description": "Redirect URIs",
            "type": "array",
            "items": { "type": "string" }
          },
          "allowedScopes": {
            "description": "Allowed Scopes",
            "type": "array",
            "items": { "type": "string" }
          },
          "allowedGrants": {
            "type": "array",
            "description": "Allowed Grants",
            "items": {
              "type": "string",
              "enum": [
                "authorization_code",
                "client_credentials",
                "refresh_token"
              ]
            }
          },
          "settings": {
            "description": "Client Settings",
            "allOf": [{ "$ref": "#/components/schemas/ClientSettings" }]
          }
        },
        "required": ["name", "type"]
      },
      "UpdateClientDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Client Name" },
          "redirectUris": {
            "description": "Redirect URIs",
            "type": "array",
            "items": { "type": "string" }
          },
          "allowedScopes": {
            "description": "Allowed Scopes",
            "type": "array",
            "items": { "type": "string" }
          },
          "allowedGrants": {
            "type": "array",
            "description": "Allowed Grants",
            "items": {
              "type": "string",
              "enum": [
                "authorization_code",
                "client_credentials",
                "refresh_token"
              ]
            }
          },
          "settings": {
            "description": "Client Settings",
            "allOf": [{ "$ref": "#/components/schemas/ClientSettings" }]
          }
        },
        "required": ["name"]
      }
    }
  }
}
